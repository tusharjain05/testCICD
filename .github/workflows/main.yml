name: Android Instrument Tests
on:
  pull_request:
    branches: [master, main, uat]
  push:
    branches: [master, main, uat]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Android SDK Platform Tools
        run: sdkmanager "platform-tools"

      - name: Install Android Emulator
        run: sdkmanager "emulator"

      - name: Install System Image
        run: sdkmanager "system-images;android-30;google_apis;x86"

      - name: Create AVD
        run: echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --force

      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -no-boot-anim -accel off &
          adb wait-for-device
          adb shell settings put global window_animation_scale 0 &
          adb shell settings put global transition_animation_scale 0 &
          adb shell settings put global animator_duration_scale 0 &
        timeout-minutes: 60

      - name: Wait for Emulator to be Ready
        run: |
          boot_completed=""
          until [ "$boot_completed" = "1" ]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>&1)
            sleep 1
          done
          echo "Emulator is ready"

      - name: Run tests
        run: ./gradlew connectedDebugAndroidTest

      # - name: Store test results
      #   if: always()
      #   run: mkdir -p artifacts && cp -r app/build/reports/androidTests/connected/* artifacts/

      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: android-test-results
      #     path: artifacts/

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set APK Name
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "APK_NAME=development_standalone_watch_application.apk" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "uat" ]; then
            echo "APK_NAME=testing_standalone_watch_application.apk" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "master" ]; then
            echo "APK_NAME=release_standalone_watch_application.apk" >> $GITHUB_ENV

      - name: Development APK
        if: github.ref == 'refs/heads/main'
        run: echo "Development APK build process"
        # Add your specific development build commands here, if any

      - name: Testing APK
        if: github.ref == 'refs/heads/uat'
        run: echo "Testing APK build process"
        # Add your specific testing build commands here, if any

      - name: Release APK
        if: github.ref == 'refs/heads/master'
        run: echo "Release APK build process"
        # Add your specific release build commands here, if any

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ env.APK_NAME }}
          path: app/build/outputs/apk/debug/app-debug.apk
